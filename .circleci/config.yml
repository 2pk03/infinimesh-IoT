version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.16
        environment:
          GO111MODULE: "on"
    working_directory: /go/src/github.com/infinimesh/infinimesh

    steps:
      - checkout
      - run:
          name: Verify go.mod
          command: go mod verify
      - run:
          name: Install Task
          command: curl -s https://taskfile.org/install.sh | sh
      - run:
          name: Install linters
          command: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s v1.11.2 && mv ./bin/* /go/bin/
      - run:
          name: Lint
          command: task lint
      - run:
          name: Run build
          command: task build
  build-frontend:
    docker:
      - image: circleci/node:14.17.0
    steps:
      - checkout
      - run:
          name: deps
          command: cd frontend && yarn
      - run:
          name: lint
          command: cd frontend && yarn lint
      - run:
          name: build
          command: cd frontend && yarn build
  tests:
    docker:
      - image: circleci/golang:1.16
        environment:
          GO111MODULE: "on"
    working_directory: /go/src/github.com/infinimesh/infinimesh
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: compose
          command: docker-compose -f e2e/docker-compose.yaml up -d --quiet-pull
      - run:
          name: copy repo into docker
          command: docker cp ./ testrunner:/project
      - run:
          name: run tests
          command:  docker exec -t testrunner bash -c 'cd /go/src/github.com/infinimesh/infinimesh && go mod download && CGO_ENABLED=0 go run -mod=mod hack/import_dgraph_sample_data.go -drop && go test -mod=mod ./...'
  tests-frontend:
    docker:
      - image: circleci/node:14.17.0
    steps:
      - checkout
      - run:
          name: deps
          command: cd frontend && yarn
      - run:
          name: lint
          command: cd frontend && yarn lint
      - run:
          name: tests
          command: cd frontend && yarn test
workflows:
  version: 2
  all:
    jobs:
      - build
      - build-frontend
      - tests
      - tests-frontend
