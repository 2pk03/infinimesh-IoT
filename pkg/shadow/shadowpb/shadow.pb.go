// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/shadow/shadowpb/shadow.proto

package shadowpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetReportedRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReportedRequest) Reset()         { *m = GetReportedRequest{} }
func (m *GetReportedRequest) String() string { return proto.CompactTextString(m) }
func (*GetReportedRequest) ProtoMessage()    {}
func (*GetReportedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40d60d4453ee7b12, []int{0}
}

func (m *GetReportedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportedRequest.Unmarshal(m, b)
}
func (m *GetReportedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportedRequest.Marshal(b, m, deterministic)
}
func (m *GetReportedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportedRequest.Merge(m, src)
}
func (m *GetReportedRequest) XXX_Size() int {
	return xxx_messageInfo_GetReportedRequest.Size(m)
}
func (m *GetReportedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportedRequest proto.InternalMessageInfo

func (m *GetReportedRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type GetReportedResponse struct {
	State                *_struct.Value `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetReportedResponse) Reset()         { *m = GetReportedResponse{} }
func (m *GetReportedResponse) String() string { return proto.CompactTextString(m) }
func (*GetReportedResponse) ProtoMessage()    {}
func (*GetReportedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40d60d4453ee7b12, []int{1}
}

func (m *GetReportedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportedResponse.Unmarshal(m, b)
}
func (m *GetReportedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportedResponse.Marshal(b, m, deterministic)
}
func (m *GetReportedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportedResponse.Merge(m, src)
}
func (m *GetReportedResponse) XXX_Size() int {
	return xxx_messageInfo_GetReportedResponse.Size(m)
}
func (m *GetReportedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportedResponse proto.InternalMessageInfo

func (m *GetReportedResponse) GetState() *_struct.Value {
	if m != nil {
		return m.State
	}
	return nil
}

func init() {
	proto.RegisterType((*GetReportedRequest)(nil), "infinimesh.shadow.GetReportedRequest")
	proto.RegisterType((*GetReportedResponse)(nil), "infinimesh.shadow.GetReportedResponse")
}

func init() { proto.RegisterFile("pkg/shadow/shadowpb/shadow.proto", fileDescriptor_40d60d4453ee7b12) }

var fileDescriptor_40d60d4453ee7b12 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0xc8, 0x4e, 0xd7,
	0x2f, 0xce, 0x48, 0x4c, 0xc9, 0x2f, 0x87, 0x52, 0x05, 0x49, 0x50, 0x86, 0x5e, 0x41, 0x51, 0x7e,
	0x49, 0xbe, 0x90, 0x60, 0x66, 0x5e, 0x5a, 0x66, 0x5e, 0x66, 0x6e, 0x6a, 0x71, 0x86, 0x1e, 0x44,
	0x42, 0x4a, 0x26, 0x3d, 0x3f, 0x3f, 0x3d, 0x27, 0x55, 0x1f, 0xac, 0x20, 0xa9, 0x34, 0x4d, 0xbf,
	0xb8, 0xa4, 0xa8, 0x34, 0xb9, 0x04, 0xa2, 0x41, 0xc9, 0x90, 0x4b, 0xc8, 0x3d, 0xb5, 0x24, 0x28,
	0xb5, 0x20, 0xbf, 0xa8, 0x24, 0x35, 0x25, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x9a,
	0x8b, 0x33, 0x25, 0xb5, 0x2c, 0x33, 0x39, 0x35, 0x3e, 0x33, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83,
	0x33, 0x88, 0x03, 0x22, 0xe0, 0x99, 0xa2, 0xe4, 0xcc, 0x25, 0x8c, 0xa2, 0xa5, 0xb8, 0x20, 0x3f,
	0xaf, 0x38, 0x55, 0x48, 0x87, 0x8b, 0xb5, 0xb8, 0x24, 0xb1, 0x24, 0x15, 0xac, 0x9e, 0xdb, 0x48,
	0x4c, 0x0f, 0x62, 0xaf, 0x1e, 0xcc, 0x5e, 0xbd, 0xb0, 0xc4, 0x9c, 0xd2, 0xd4, 0x20, 0x88, 0x22,
	0xa3, 0x34, 0x2e, 0xb6, 0x60, 0xb0, 0xfb, 0x84, 0x62, 0xb8, 0xb8, 0x91, 0x8c, 0x13, 0x52, 0xd5,
	0xc3, 0xf0, 0x82, 0x1e, 0xa6, 0x0b, 0xa5, 0xd4, 0x08, 0x29, 0x83, 0xb8, 0xca, 0x89, 0x2b, 0x8a,
	0x03, 0x16, 0x52, 0x49, 0x6c, 0x60, 0xa7, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x22,
	0xf7, 0x0a, 0x47, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShadowClient is the client API for Shadow service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShadowClient interface {
	GetReported(ctx context.Context, in *GetReportedRequest, opts ...grpc.CallOption) (*GetReportedResponse, error)
}

type shadowClient struct {
	cc *grpc.ClientConn
}

func NewShadowClient(cc *grpc.ClientConn) ShadowClient {
	return &shadowClient{cc}
}

func (c *shadowClient) GetReported(ctx context.Context, in *GetReportedRequest, opts ...grpc.CallOption) (*GetReportedResponse, error) {
	out := new(GetReportedResponse)
	err := c.cc.Invoke(ctx, "/infinimesh.shadow.Shadow/GetReported", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShadowServer is the server API for Shadow service.
type ShadowServer interface {
	GetReported(context.Context, *GetReportedRequest) (*GetReportedResponse, error)
}

func RegisterShadowServer(s *grpc.Server, srv ShadowServer) {
	s.RegisterService(&_Shadow_serviceDesc, srv)
}

func _Shadow_GetReported_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShadowServer).GetReported(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/infinimesh.shadow.Shadow/GetReported",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShadowServer).GetReported(ctx, req.(*GetReportedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Shadow_serviceDesc = grpc.ServiceDesc{
	ServiceName: "infinimesh.shadow.Shadow",
	HandlerType: (*ShadowServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetReported",
			Handler:    _Shadow_GetReported_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/shadow/shadowpb/shadow.proto",
}
